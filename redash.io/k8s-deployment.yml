kind: Deployment
apiVersion: apps/v1
metadata:
  name: my-redash
  namespace: default
  uid: 4562c94f-7541-486c-8632-73d2f4861fdb
  resourceVersion: '1746465'
  generation: 1
  creationTimestamp: '2022-10-25T14:32:28Z'
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: my-redash
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redash
    app.kubernetes.io/version: 10.0.0.b50633
    helm.sh/chart: redash-3.0.0
  annotations:
    deployment.kubernetes.io/revision: '1'
    meta.helm.sh/release-name: my-redash
    meta.helm.sh/release-namespace: default
  managedFields:
    - manager: helm
      operation: Update
      apiVersion: apps/v1
      time: '2022-10-25T14:32:28Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/name: {}
            f:spec:
              f:containers:
                k:{"name":"redash-server"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"PYTHONUNBUFFERED"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDASH_COOKIE_SECRET"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"REDASH_DATABASE_DB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDASH_DATABASE_HOSTNAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDASH_DATABASE_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"REDASH_DATABASE_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDASH_DATABASE_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDASH_REDIS_DB"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDASH_REDIS_HOSTNAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDASH_REDIS_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"REDASH_REDIS_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"REDASH_SECRET_KEY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"SQLALCHEMY_ENABLE_POOL_PRE_PING"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2022-10-25T14:34:29Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      subresource: status
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: my-redash
      app.kubernetes.io/name: redash
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: my-redash
        app.kubernetes.io/name: redash
    spec:
      volumes:
        - name: config
          configMap:
            name: my-redash
            defaultMode: 420
      containers:
        - name: redash-server
          image: samzong/redash:10.1.0.b50633-elasticsearch-fix-ssl
          command:
            - /bin/sh
          args:
            - '-c'
            - . /config/dynamicenv.sh && /app/bin/docker-entrypoint server
          ports:
            - containerPort: 5000
              protocol: TCP
          env:
            - name: REDASH_DATABASE_USER
              value: redash
            - name: REDASH_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-redash-postgresql
                  key: postgresql-password
            - name: REDASH_DATABASE_HOSTNAME
              value: my-redash-postgresql
            - name: REDASH_DATABASE_PORT
              value: '5432'
            - name: REDASH_DATABASE_DB
              value: redash
            - name: REDASH_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-redash-redis
                  key: redis-password
            - name: REDASH_REDIS_HOSTNAME
              value: my-redash-redis-master
            - name: REDASH_REDIS_PORT
              value: '6379'
            - name: REDASH_REDIS_DB
              value: '0'
            - name: PYTHONUNBUFFERED
              value: '0'
            - name: REDASH_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: my-redash
                  key: secretKey
            - name: REDASH_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: my-redash
                  key: cookieSecret
            - name: SQLALCHEMY_ENABLE_POOL_PRE_PING
              value: 'true'
          resources: {}
          volumeMounts:
            - name: config
              mountPath: /config
          livenessProbe:
            httpGet:
              path: /ping
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 90
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: my-redash
      serviceAccount: my-redash
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 1
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2022-10-25T14:34:29Z'
      lastTransitionTime: '2022-10-25T14:34:29Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2022-10-25T14:34:29Z'
      lastTransitionTime: '2022-10-25T14:32:28Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "my-redash-86c8b6c798" has successfully progressed.
